A
850
LIGHT_SPECS

# WARNING TO X-PLANE USERS
#
# This is an internal file that contains data for the built-in X-Plane lights. It is closely tied to the X-Plane code and
# other internal stuff. If you modify this file, your sim may stop working. We do not recommend modifying this light as an
# add-on. Any modifications to this file that work with the current version of X-Plane may crash the next version.
# Please consider yourself warned.

# Note on orientation: a light's "front" face is TO the south - so if you are south of the light looking north - you see the light.
# Thus the standard direction vector for a directional light is 0,0,1 so it is pointing along the positive Z axis (south).
# In Sergio's textures, the default ground halo orientation is such that the RIGHT side of the halo will be aligned with the front/south
# of the light.

# These tables show the meaning of each column for each overload type
# and which can be parameterized (* for yes, x for no)
# The first column - the light name - is not included and is part of every overload type

# OVERLOAD type | R | G | B | A | SIZE | CELL_SIZE | CELL_ROW | CELL_COL | DX | DY | DZ | WIDTH | FREQ | PHASE | AMP | DAY | DREF
# --------------|---|---|---|---|------|-----------|----------|----------|----|----|----|-------|------|-------|-----|-----|-----
# BILLBOARD_HW  | * | * | * | x | *    | x         | x        | x        | *  | *  | *  | *     | *    | *     | x   | x   |x
#
# OVERLOAD type | R | G | B | A | SIZE | CELL_SIZE | CELL_ROW | CELL_COL | DX | DY | DZ | WIDTH | DREF
# --------------|---|---|---|---|------|-----------|----------|----------|----|----|----|-------|-----
# BILLBOARD_SW  | * | * | * | * | *    | x         | x        | x        | *  | *  | *  | *     |x
#
# OVERLOAD type | SIZE | CELL_SIZE | CELL_ROW | CELL_COL
# --------------|------|-----------|----------|----------
# SPILL_GND     | *    | x         | x        | x
# SPILL_GND_REV | *    | x         | x        | x
#
# OVERLOAD type | R | G | B | A | SIZE | DX | DY | DZ | WIDTH | DAY
# --------------|---|---|---|---|------|----|----|----|-------|----
# SPILL_HW_DIR  | * | * | * | * | *    | *  | *  | *  | *     | x
#
# OVERLOAD type | R | G | B | A | SIZE | FREQ | PHASE | AMP | DAY
# --------------|---|---|---|---|------|------|-------|-----|----
# SPILL_HW_FLA  | * | * | * | * | *    | *    | *     | x   | x
#
# OVERLOAD type | R | G | B | A | SIZE | DX | DY | DZ | WIDTH | DREF
# --------------|---|---|---|---|------|----|----|----|-------|-----
# SPILL_SW      | * | * | * | * | *    | *  | *  | *  | *     | x

#
# BILLBOARD_HW - hardware accelerated billboard. This is the same as the old LIGHT_DIRECTIONAL and LIGHT_FLASHING except now we can have both.
# BILLBOARD_SW - dataref-driven billboard. Same as the old LIGHT_ANIMATION and LIGHT_PARAM.
# SPILL_GND, SPILL_GND_REV - old v8-style quads-on-the-ground light spill for runway lights.
# SPILL_HW_DIR, SPILL_HW_FLA - hardware spill, directional' or flashing. We can't have both due to a lack of light params.
# SPILL_SW - dataref driven spill.

# NOTE: hardware billboards must have an alpha of 1.0 if any of the RGB values are parameterized!

# RGBA: This is the color tint that is applied to the light spill or the billboard. Since light is additive, alpha is really just a master dimmer.
# Size: Light size. This is the total size in meters for spill, or a 'size constant' for billboards.
# Cell: A triplet of ints (size, row, column, 0,0 is lower left) for billboards. Size is a power-of-two multiplier for cell size.
# Thus a double-size cell in the top right corner is 2 7 3 (because the 1024 x 512 texture can be divided into a 8 x 4 grid of 128x128 pixel cells)
# Dx, Dy, Dz: Direction vector for billboards and spill.
# Width: For billboards: a constant term that makes the billboard more omni. For spill: cosine of half viewing angle.
# Frq,Phase,Amp,Day: Frequency, phase offset, amplitude and day/night flag for flashing lights.
# Dataref: For software lights, the dataref that "processes" the light.

# NOTE: if a hardware or software billboard has negative size, then it is axial. In this case: the direction is the axis of rotation (the billboard hangs off in that
# direction. The axis should be normalized. The 'width' parameter is used as a scaler, e.g. larger numbers are more focused.

# More notes on frequency:
# 1nd parameter: "frequency" of flashing in Hz ( number of flashes per second, 0.2 mean a flash every 5 seconds)
# 2st parameter: "Phase offset" in seconds (so you can make two flashing lights that don't flash at the same time, this value controls how late the flashing pattern starts from light OFF
# 3rd parameter: "amplitude" of the flash, flash is a triangle wave, but with amplitude 1.0 the lights pulse (going from 0 to 1 and back to 0)
# but if you pick a huge amplitude like 10.0 x-plane will automatically subtract 9 (to keep the light from going crazy) the result is....a strobe!
# if you set the amplitude to 0.5 then x-plane will add a bit so even at its DARKEST the light will still be 50% ON, so you can make some tricks with the amplitude
#
# ALEX SAYS: Flash amplitudes GREATER THAN 1000 now invoke a square-wave flash behaviour. The pulse width ratio is calculated as (amp - 1000)/1000 %.
# In other words, every integer over 1000 represents one millicycle. E.g. amp = 1500 gives a pulse width of 50%, amp = 1020 gives a pulse width of 2% etc.
# Amplitudes less than 1000 still invoke the existing "strobe" scheme.
#
# 4th parameter: "daytime vs night-time" ratio. if it is 1 the light will be ON during the day and night, if it is 0 light will be ON only at night.
#

TEXTURE 1000_lights_close.dds
TEXTURE 1000_lights_distant2.dds
#TEXTURE 1000_lights_precip.dds
#TEXTURE 1000_lights_fog.dds

X_DIVISIONS 16
Y_DIVISIONS 8
